  version: "3.8"

networks:
  spring-boot-postgresql-network:
    name: spring-boot-postgresql-network

services:
  postgres-db:
    image: postgres:13
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: db_testesiauapp2  # ✅ Correspond à application.properties
      POSTGRES_USER: root            # ✅ Correspond à Spring Boot
      POSTGRES_PASSWORD: "mypassword"  # ✅ Correspond à Spring Boot
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - spring-boot-postgresql-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "root"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  pgadmin4:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    depends_on:
      - postgres-db
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com  # ✅ Email par défaut pour pgAdmin
      PGADMIN_DEFAULT_PASSWORD: "mypassword"  # ✅ Mot de passe pour pgAdmin
    ports:
      - "8081:80"  # ✅ Port pour accéder à pgAdmin4
    networks:
      - spring-boot-postgresql-network

  spring-app:
    build: .
    container_name: spring_boot_app
    depends_on:
      postgres-db:
        condition: service_healthy  # ✅ Attendre que PostgreSQL soit prêt
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/db_testesiauapp2
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: "mypassword"
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
    ports:
      - "8080:8080"
    restart: always
    networks:
      - spring-boot-postgresql-network

volumes:
  postgres_data:
